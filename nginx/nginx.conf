worker_processes  1;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  server_tokens off;

  upstream exoplanet_api {
    server exoplanet-api:8000;
  }

  # HTTP server (optional redirect to HTTPS if certs are provided)
  server {
    listen 80;
    server_name _;

    # Serve SPA static files
    root /usr/share/nginx/html;
    index index.html;

    # Try static files first, then fallback to index.html (SPA)
    location / {
      try_files $uri $uri/ /index.html;
    }

    # Proxy API endpoints to backend
    location ~ ^/(predict|metrics|health|catalog|lightcurve) {
      proxy_pass http://exoplanet_api;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  # HTTPS server (requires mounted certs in /etc/nginx/ssl)
  server {
    listen 443 ssl http2;
    server_name _;

    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Serve SPA static files
    root /usr/share/nginx/html;
    index index.html;

    location / {
      try_files $uri $uri/ /index.html;
    }

    # Proxy API endpoints to backend
    location ~ ^/(predict|metrics|health|catalog|lightcurve) {
      proxy_pass http://exoplanet_api;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
